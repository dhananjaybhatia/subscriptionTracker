import * as h3 from 'h3';
import { R as RouteFunction, n as PublicServeOptions, w as InvokableWorkflow } from './types-Dd-3bPoU.mjs';
import { s as serveManyBase } from './serve-many-AFwJPR3S.mjs';
import '@upstash/qstash';
import 'zod';
import 'ai';
import '@ai-sdk/openai';

declare const serve: <TInitialPayload = unknown, TResult = unknown>(routeFunction: RouteFunction<TInitialPayload, TResult>, options?: PublicServeOptions<TInitialPayload>) => {
    handler: h3.EventHandler<h3.EventHandlerRequest, Promise<Response>>;
};
declare const createWorkflow: <TInitialPayload, TResult>(routeFunction: RouteFunction<TInitialPayload, TResult>, options?: PublicServeOptions<TInitialPayload> | undefined) => InvokableWorkflow<TInitialPayload, TResult>;
declare const serveMany: (workflows: Parameters<typeof serveManyBase>[0]["workflows"], options?: Parameters<typeof serveManyBase>[0]["options"]) => {
    handler: (event: h3.H3Event<h3.EventHandlerRequest>) => Promise<any>;
};

export { createWorkflow, serve, serveMany };
